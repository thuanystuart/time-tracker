// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
@use 'sass:map';
@import '~@angular/material/theming';

@import './color-palettes.scss';


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$app-primary: mat.define-palette($bluish-grey-pallete);
$app-accent: mat.define-palette(mat.$amber-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$app-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$app-theme: mat.define-light-theme((
  color: (
    primary: $app-primary,
    accent: $app-accent,
    warn: $app-warn,
  )
));

// Color variables to be used in component customization
$color-config:    mat.get-color-config($app-theme);
$primary-palette: map.get($color-config, 'primary');
$accent-palette:  map.get($color-config, 'accent');
$warn-palette:    map.get($color-config, 'warn');

$primary-color:   mat.get-color-from-palette($primary-palette, 500);
$primary-light:   mat.get-color-from-palette($primary-palette, 200);
$primary-dark:    mat.get-color-from-palette($primary-palette, 600);

$accent-color:    mat.get-color-from-palette($accent-palette, 500);
$accent-light:    mat.get-color-from-palette($accent-palette, 200);
$accent-dark:     mat.get-color-from-palette($accent-palette, 600);
